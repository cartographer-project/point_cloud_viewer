/*
 * Copyright 2016 The Cartographer Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package point_viewer.proto;

message Vector2d {
  double x = 1;
  double y = 2;
}

message Vector3f {
  float x = 1;
  float y = 2;
  float z = 3;
}

message Vector3d {
  double x = 1;
  double y = 2;
  double z = 3;
}

message Quaterniond {
  double x = 1;
  double y = 2;
  double z = 3;
  double w = 4;
}

// Based on OpenGL standards, the value of fields will be between 0 and 1
message Color {
  float red = 1;
  float green = 2;
  float blue = 3;
  float alpha = 4;
}

message AxisAlignedCube {
  Vector3f min = 1;
  float edge_length = 2;
}

message AxisAlignedCuboid {
  Vector3d min = 3;
  Vector3d max = 4;

  // These were used in VERSION <= 10. Once we no longer need to keep these
  // working, we should remove these entries.
  Vector3f deprecated_min = 1;
  Vector3f deprecated_max = 2;
}

message NodeId {
  uint64 high = 3;
  uint64 low = 4;

  // These were used in VERSION <= 9. Once we no longer need to keep these
  // working, we should remove these entries.
  int32 deprecated_level = 1;
  int64 deprecated_index = 2;
}

message Node {
  enum PositionEncoding {
    INVALID = 0;
    Uint8 = 1;
    Uint16 = 2;
    Float32 = 3;
    Float64 = 4;
  }

  PositionEncoding position_encoding = 2;
  int64 num_points = 3;
  NodeId id = 4;
}

message Meta {
  int32 version = 1;
  AxisAlignedCuboid bounding_box = 4;
  double resolution = 3;
  repeated Node nodes = 5;
}
